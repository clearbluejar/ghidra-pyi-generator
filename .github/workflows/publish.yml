name: Publish Release for each Ghidra Build

on:
#  push:
#    tags:
#      - 'v*.*.*'
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 3"
    

jobs:

  check-release:
    runs-on: ubuntu-20.04
    outputs:
      ghidra-repo-release: ${{ steps.get_ghidra_ver.outputs.release }}
      ghidra-latest-ver: ${{ steps.format_ghidra_ver.outputs.ghidra_ver }}
      self-release: ${{ steps.self.outputs.release }}
      already-exists: contains( steps.format_ghidra_ver.outputs.ghidra_ver, steps.self.outputs.release)
    steps:
      - name: Get Latest Ghidra Version
        id: get_ghidra_ver
        uses: pozetroninc/github-action-get-latest-release@v0.6.0
        with:
          repository: NationalSecurityAgency/ghidra
          excludes: prerelease, draft
      - id: self
        uses: pozetroninc/github-action-get-latest-release@v0.6.0
        with:
          repository: ${{ github.repository }}
      - name: Format Ghidra Version
        id: format_ghidra_ver
        run: |
          ghidra_ver=$(echo ${{steps.get_ghidra_ver.outputs.release}} | cut -d_ -f2)
          echo "::set-output name=ghidra_ver::$ghidra_ver"
      - name: Print Versions
        run: |
          echo "${{steps.format_ghidra_ver.outputs.ghidra_ver}}  ${{steps.self.outputs.release }}"
          echo "already exists ${{contains( steps.format_ghidra_ver.outputs.ghidra_ver, steps.self.outputs.release) }}"
      
      

  build-n-publish:
    needs: 
      - check-release
    if: needs.check-release.outputs.already-exists == 'false'
    name: Build Python Package
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "2.7"
          
      - name: Get Latest Ghidra Version
        id: get_ghidra_ver
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: NationalSecurityAgency/ghidra
          
      - uses: er28-0652/setup-ghidra@master
        with:
          version: "${{ steps.format_ghidra_ver.outputs.ghidra_ver }}"

      - name: Prepare Jython Environment
        run:
          pip2.7 install --target="$GHIDRA_INSTALL_DIR/Ghidra/Features/Python/data/jython-2.7.2/Lib/site-packages" attrs typing

      - name: Build Package
        run: |
          "$GHIDRA_INSTALL_DIR/support/analyzeHeadless" /tmp tmp -scriptPath $(pwd) -preScript generate_ghidra_pyi.py ./ ${GITHUB_REF#refs/*/v}
          test -f setup.py # check manually, because analyzeHeadless doesn't fail on script failure
          test -d ghidra-stubs

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          wheel
          --user

      - name: Build a binary wheel and a source tarball
        run: |
          python setup.py bdist_wheel --universal
          python setup.py sdist

      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/*
          tag_name: "v1.0.3-${{ steps.format_ghidra_ver.outputs.ghidra_ver }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
